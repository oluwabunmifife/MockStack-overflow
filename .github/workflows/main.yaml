on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      EC2_HOST_1: ${{ secrets.EC2_HOST_1 }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
  
      - name: Setup SSH for EC2 server 1
        uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
        with:
            SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
            EC2_HOST_1: $EC2_HOST_1

      - name: Setup SSH for EC2 server 2
        uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
        with:
            SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
            EC2_HOST_2: $EC2_HOST_2

      - name: Run docker commands on both host 1
        run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST_1 "docker compose up --build"

      - name: Run docker commands on both host 2
        run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST_2 "docker compose up --build"

# jobs:
#   setup-ssh:
#     runs-on: ubuntu-latest
#     env:
#       EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#       EC2_URL: ${{ secrets.EC2_URL }}
#       EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
#     steps:
#     - name: Setup SSH for EC2
#       uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
#       with:
#           EC2_SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
#           EC2_URL: $EC2_URL
#     # then you can run commands/scripts directly on the EC2 instance e.g.:
#     - name: Create a new file on the EC2 instance with "hello-world"
#       run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "echo "hello-world" >> new_file.txt"