# name: Build server2

# on:
#   workflow_run:
#     workflows: ["Build server1"]
#     types:
#       - completed

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     env:
#       EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#       EC2_URL: ${{ secrets.EC2_HOST_2 }}
#       EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v3
  
#       - name: Setup SSH for EC2 server 2
#         uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
#         with:
#             EC2_SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
#             EC2_URL: $EC2_URL

#       - name: Run docker commands on server 2
#         run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "cd /home/ubuntu/MockStack-overflow && docker compose up --build -d"


#         # run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL << 'EOF'
#         #         cd /home/ubuntu
#         #         rm -rf MockStack-overflow
#         #         git clone https://github.com/oluwabunmifife/MockStack-overflow.git
#         #         cd /home/ubuntu/MockStack-overflow
#         #         docker compose up --build -d
#         #       EOF

name: Build server1/2 test matrix

on:
  push:
    branches: [main]
    
server_list:  # List of servers to deploy to
  - ec2-instance-1
  - ec2-instance-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server_list: ${{ matrix.server_list }}  # Reference the defined list
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      # ... other steps (same as before)

      - name: Deploy to Server (Dynamic based on matrix)
        run: |
          server_url=${{ secrets[${{ secrets.EC2_URL }}.URL] }}  # Assuming EC2_SECRET_NAME_1 holds URL for ec2-instance-1
          if [[ "${{ matrix.server_list }}" == "ec2-instance-2" ]]; then
            server_url=${{ secrets[${{ secrets.EC2_HOST_2 }}.URL] }}  # Assuming EC2_SECRET_NAME_2 holds URL for ec2-instance-2
          fi
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$server_url << 'EOF'
            echo "Successful"
          EOF
